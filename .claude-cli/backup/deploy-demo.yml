name: Deploy Flutter Demo to GitHub Pages

on:
  push:
    branches: [master]
    paths:
      - "demo/**"
      - ".github/workflows/deploy-demo.yml"

  pull_request:
    branches: [master]
    paths:
      - "demo/**"

  # Permite executar manualmente
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  FLUTTER_VERSION: "3.19.0"
  FLUTTER_CHANNEL: "stable"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/pubspec.lock
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        working-directory: ./demo
        run: flutter pub get

      - name: Analyze code
        working-directory: ./demo
        run: flutter analyze --no-fatal-infos

      - name: Format code
        working-directory: ./demo
        run: dart format --set-exit-if-changed .

  # test:
  #   name: Test
  #   runs-on: ubuntu-latest
  #   needs: analyze

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: ${{ env.FLUTTER_VERSION }}
  #         channel: ${{ env.FLUTTER_CHANNEL }}

  #     - name: Cache pub dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.pub-cache
  #           **/.packages
  #           **/.flutter-plugins
  #           **/.flutter-plugin-dependencies
  #           **/pubspec.lock
  #         key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pub-

  #     - name: Install dependencies
  #       working-directory: ./demo
  #       run: flutter pub get

  #     - name: Run tests
  #       working-directory: ./demo
  #       run: flutter test --coverage

  #     - name: Upload coverage to Codecov (optional)
  #       uses: codecov/codecov-action@v3
  #       with:
  #         file: ./demo/coverage/lcov.info
  #         fail_ci_if_error: false

  build:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [analyze]
    #, test]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}

      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/pubspec.lock
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Enable Flutter Web
        run: flutter config --enable-web

      - name: Install dependencies
        working-directory: ./demo
        run: flutter pub get

      - name: Build web app
        working-directory: ./demo
        run: |
          flutter build web \
            --release \
            --base-href="/${{ github.event.repository.name }}/" \
            --web-renderer html \
            --dart-define=FLUTTER_WEB_USE_SKIA=true

      - name: Optimize web files
        working-directory: ./demo/build/web
        run: |
          # Adicionar compressão gzip para melhor performance
          find . -type f -name "*.js" -exec gzip -k {} \;
          find . -type f -name "*.css" -exec gzip -k {} \;
          find . -type f -name "*.html" -exec gzip -k {} \;

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./demo/build/web"

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Demo deployed successfully! View it at: ${{ steps.deployment.outputs.page_url }}'
            })

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()

    steps:
      - name: Send notification on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            console.log('Deploy failed! Check the logs for details.')
            // Aqui você pode adicionar integrações com Slack, Discord, etc.
